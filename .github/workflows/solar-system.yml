name: Solar System Workflow

permissions:
  actions: read
  contents: read

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/**'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit_testing:
    name: Unit Testing
    strategy:
      matrix:
        nodejs_version: [18, 19, 20]
        operating_system: [ubuntu-latest, macos-latest]
        exclude:
          - nodejs_version: 18
            operating_system: macos-latest

    runs-on: ${{matrix.operating_system}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - ${{matrix.nodejs_version}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.nodejs_version}}

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        id: nodejs-unit-testing-step
        run: npm test

      - name: Archive Test Result
        if: always()
        uses: actions/upload-artifact@v4
        with:
         name: Unit-Test-Report-${{ matrix.nodejs_version }}-${{ runner.os }}
         path: ./test-results/
         retention-days: 5

  code-coverage:
       runs-on: ubuntu-latest

       steps:
        - name: Step 1 - Checkout repository
          uses: actions/checkout@v4

        - name: Step 2 - Setup Node.js
          uses: actions/setup-node@v3
          with:
           node-version: '18'
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
           path: node_modules
           key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}

        - name: Step 3 - Install NodeJS dependencies
          run: npm install

        - name: Step 4 - Run Code Coverage
          run: npm run code-coverage
          continue-on-error: true

        - name: Step 5 - Upload Code Coverage Report
          uses: actions/upload-artifact@v4
          with:
           name: Code-Coverage-Result-${{ matrix.nodejs_version || github.job }}
           path: coverage
           retention-days: 5
  
  docker:
   name: Containerization
   needs: [unit_testing, code-coverage]
   runs-on: ubuntu-latest
   steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Dockerhub Login
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        







